name: Main branch build

on:
  push:
    branches: [ main ]
    paths-ignore: [ '.github/**', '*.md' ]


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: maven
      - name: Maven test
        if: github.repository != 'cottoncammy/disquark'
        run: ./mvnw -B -s .github/mvn-ci-settings.xml test
      - name: Maven verify
        if: github.repository == 'cottoncammy/disquark'
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
          DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
          DISCORD_GUILD_ID: ${{ secrets.DISCORD_GUILD_ID }}
          DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
          DISCORD_USER_ID: ${{ secrets.DISCORD_USER_ID }}
        run: ./mvnw -B -DskipITs=false verify
      - name: Upload test reports (if run failed)
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: './**/target/*-reports/TEST-*.xml'

  snapshots:
    name: Release snapshots
    runs-on: ubuntu-latest
    if: github.repository == 'cottoncammy/disquark'
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: maven
      - name: Maven release
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: |
            echo "${{ secrets.GPG_SECRET_KEY }}" | base64 --decode | gpg2 --batch --import 
            ./mvnw -B -s .github/mvn-ci-settings.xml -Prelease -ntp -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}